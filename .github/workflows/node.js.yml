# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    env:
      PORT: 3000
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_USERNAME: ${{secrets.DB_USERNAME}}
      CONNECTION_STRING: ${{secrets.CONNECTION_STRING}}
      DB: ${{secrets.DB}}
      SERVER_URL: "http://localhost:3000"
      ROOT_API_VERSION_PATH: "api/v1"
      JWT_SECRET: ${{secrets.JWT_SECRET}}
      JWT_EXPIRES_IN: "90d"
      NODE_ENV: "test"
      TEST_USER_FIRSTNAME: ${{ secrets.TEST_USER_FIRSTNAME }}
      TEST_USER_LASTNAME: ${{secrets.TEST_USER_LASTNAME}}
      TEST_USER_NICKNAME: ${{secrets.TEST_USER_NICKNAME}}
      TEST_USER_EMAIL: ${{secrets.TEST_USER_EMAIL}}
      TEST_USER_PASSWORD: ${{secrets.TEST_USER_PASSWORD}}
      DEPLOY_HOOK: ${{secrets.DEPLOY_HOOK}}
      
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      #     - run: npm run test:start
      #     - run: npm test
      - name: "Start Backend"
        run: |
          npm run test:start &
      - name: "Start Tests"
        run: |
          npm test
      - name: Create Staging Release
        run: $DEPLOY_HOOK